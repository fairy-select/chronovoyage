from typing import ClassVar

from typing_extensions import Self

class AppLogger:
    __available_log_level: ClassVar[set[str]]
    __logger: Self
    __verbose: bool

    @classmethod
    def set_verbose(cls, *, verbose: bool) -> None: ...
    @classmethod
    def get_instance(cls) -> Self: ...
    def __init__(self, *, verbose: bool) -> None: ...
    # log level
    def debug(self, msg: object, *args: object) -> None: ...
    def info(self, msg: object, *args: object) -> None: ...
    def warning(self, msg: object, *args: object) -> None: ...
    def error(self, msg: object, *args: object) -> None: ...
    def exception(self, msg: object, *args: object, **kwargs) -> None: ...

def get_default_logger() -> AppLogger: ...
