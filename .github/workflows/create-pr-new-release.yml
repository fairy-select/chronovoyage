name: Create PR (for new release)

on:
  push:
#  workflow_dispatch:
#    inputs:
#      segment:
#        description: increment version method
#        type: string
#        required: true
#        options:
#          - major  # 1.0.0 to 2.0.0
#          - minor  # 1.0.0 to 1.1.0
#          - micro  # 1.0.0 to 1.0.1

env:
  branch-name: "version-update"

jobs:
  commit-and-push:
    name: Commit and push
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      new-version: ${{ steps.new-version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Install Hatch
        uses: pypa/hatch@install

      - name: Configure git
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Create branch (after clean)
        run: |
          git push -d origin ${{ env.branch-name }} || true
          git checkout -b ${{ env.branch-name }} main

      - name: Update version
        run: hatch version micro

      - name: Get new version number
        id: new-version
        run: echo "version=$(hatch version)" >> $GITHUB_OUTPUT

      - name: Commit and push
        run: |
          git commit -am "build: update version to ${{ steps.new-version.outputs.version }}"
          git push --set-upstream origin ${{ env.branch-name }}

  create-pr:
    name: Create a PR
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      actions: write
    needs:
      - commit-and-push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: actions/create-github-app-token@v1
        id: generate-token
        with:
          app-id: ${{ secrets.REPOSITORY_APP_ID }}
          private-key: ${{ secrets.REPOSITORY_APP_PRIVATE_KEY }}

      - name: Create PR (after clean)
        run: |
          gh pr close ${{ env.branch-name }} --comment "This PR is deprecated." || true
          gh pr create \
            --base main --head ${{ env.branch-name }} \
            --title "Update version to ${{ needs.commit-and-push.outputs.new-version }}" \
            --body "New release is created after you merge the PR." \
            --label "new release"
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}

#      - name: Manually trigger the workflow "test"
#        run: gh workflow run test.yml --ref ${{ env.branch-name }}
#        env:
#          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
